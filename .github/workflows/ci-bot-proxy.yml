name: Node CI for growi-bot-proxy

on:
  push:
    branches-ignore:
      - release/**
      - tmp/**
    paths:
      - .github/workflows/ci-bot-proxy.yml
      - .eslint*
      - .prettier*
      - .stylelint*
      - packages/growi-bot-proxy/*
      - package.json
      - yarn.lock

defaults:
  run:
    working-directory: packages/growi-bot-proxy

jobs:

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules-${{ matrix.node-version }}-${{ hashFiles('./yarn.lock') }}
    - name: Get yarn cache dir
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('./yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-${{ matrix.node-version }}-
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        yarn --frozen-lockfile
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn lint
      run: |
        yarn test

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*Node CI for growi-bot-proxy - test (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  launch-dev:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules_dev-${{ matrix.node-version }}-${{ hashFiles('./yarn.lock') }}
    - name: Get yarn cache dir
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        yarn --frozen-lockfile
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn dev:ci
      run: |
        yarn dev:ci

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*Node CI for growi-bot-proxy - launch-dev (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  launch-prod:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get Date
      id: date
      run: |
        echo ::set-output name=YmdH::$(date '+%Y%m%d%H')
        echo ::set-output name=Ymd::$(date '+%Y%m%d')
        echo ::set-output name=Ym::$(date '+%Y%m')
        echo ::set-output name=Y::$(date '+%Y')
    - name: Cache/Restore node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.YmdH }}
        restore-keys: |
          ${{ runner.os }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.Ymd }}
          ${{ runner.os }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.Ym }}
          ${{ runner.os }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.Y }}
    - name: Get yarn cache dir
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('./yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: |
        yarn --frozen-lockfile
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn build
      run: |
        yarn build
    - name: yarn install --production
      run: |
        yarn install --production
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --production --depth=0
    - name: yarn start:prod:ci
      run: |
        yarn start:prod:ci
    - name: Upload report as artifact
      uses: actions/upload-artifact@v2
      with:
        name: Report
        path: report

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*Node CI for growi-bot-proxy - launch-prod (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
